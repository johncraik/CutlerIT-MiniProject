@page "{handler?}/{title?}/{noteTxt?}/{date?}"
@model Pages.IndexModel
@{
    ViewData["Title"] = "To Do List";
}

@namespace CutlerIT_MiniProject.Models

@functions {
    /*Get the title of a note:*/
    public string? GetTitle(Note note)
    {
        return note.Title;
    }

    /*Get the note text from a note:*/
    public string? GetNoteTxt(Note note)
    {
        return note.Note1;
    }

    /*Get the deadline date of a note:*/
    public string? GetDate(Note note)
    {
        return note.Date;
    }

    /*Get a note from the database using the ID:*/
    public Note? GetDbRow(int position)
    {
        Note? note = null;
        using (var db = new TodoContext())
        {
            var query = db.Notes.Where(n => n.Id == position);
            note = query.FirstOrDefault<Note>();
        }

        return note;
    }

    /*Gets the starting index for the database:*/
    public int GetStartIndex()
    {
        using (var db = new TodoContext())
        {
            Note? note = db.Notes.FirstOrDefault<Note>();
            if(note == null)
            {
                return 0;
            }
            else
            {
                return (int) note.Id;
            }
        }
    }

    public int GetEndIndex()
    {
        using (var db = new TodoContext())
        {   
            /*Get the first note in the databse:*/
            Note? note = db.Notes.FirstOrDefault<Note>();
            if(note == null)
            {
                /*if null, there are no existing notes. -1 will prevent the table being made*/
                return -1;
            }
            else
            {
                /*Set the end index to the first note*/
                int endIndex = (int) note.Id;
                while (note != null)
                {
                    /*Loop through each note until no new note can be found*/
                    var query = db.Notes.Where(n => n.Id == endIndex + 1);
                    note = query.FirstOrDefault<Note>();
                    if(note != null)
                    {
                        endIndex += 1;
                    }
                }

                return endIndex;
            }
        }
    }
}

<section>
    <div class="text-center">
        <!--Page title:-->
        <h1>To Do List</h1>
    </div>

    <!--Add new to do note:-->
    <div class="PageContainer">
        <!--Add new note title:-->
        <h3>Add new note:</h3>

        <!--Add new note form (input fields):-->
        <form class="ToDoNote" asp-page-handler="AddNote" method="post">
            <label class="labelTop" for="title"><strong>Title:</strong></label><br>
            <input type="text" id="title" name="title" maxlength="50"/>                 <!--Input for to do title-->
            <br>
            <label class="label" for="noteTxt"><strong>To Do Note:</strong></label><br>
            <textarea type="text" id="noteTxt" name="noteTxt" maxlength="300"></textarea>     <!--Input for to do note-->
            <br>
            <label class="label" for="date"><strong>Deadline:</strong></label><br>
            <input type="date" id="date" name="date"/>                                  <!--Input for to do deadline date-->

            <!--Button to submit new to do note:-->
            <br>
            <ng-form asp-page-handler="AddNote" method="post">
                <button class="submit">Add Note</button>    
                <input type="hidden" name="title"/>
                <input type="hidden" name="noteTxt"/>
                <input type="hidden" name="date"/>
            </ng-form>
            
        </form>
    </div>

    <!--Added to do notes:-->
    <div class="PageContainer">
        <!--Existing notes title:-->
        <h3>Existing notes:</h3>

        <!--Table containing existing to do notes:-->
        <table runat="server" id="ToDoList">
            @for (int i = @GetStartIndex(); i <= @GetEndIndex(); i++)
            {
                <tr>
                    <td><strong>@GetTitle(@GetDbRow(i))</strong><br>@GetNoteTxt(@GetDbRow(i))<br><strong>Deadline:</strong> @GetDate(@GetDbRow(i))</td>
                </tr>
            }
        </table>
    </div>
</section>
